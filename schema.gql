# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""stored tape detail"""
type DbalTapeDetail {
  budget: Float
  color: String
  duration: Int
  cover: Boolean
  adult: Boolean
  tvShow: Boolean
  tvShowChapter: Boolean
  year: Int
  tapeId: ID!
}

"""stored country"""
type DbalCountry {
  countryId: ID
  isoCode: String
  officialName: String!
}

"""stored sound"""
type DbalSound {
  description: String!
  soundId: ID
}

"""stored language"""
type DbalLanguage {
  languageId: ID
  name: String!
}

"""stored tape"""
type DbalTape {
  originalTitle: String!
  objectId: String!
  tapeId: ID
  detail: DbalTapeDetail
  countries: [DbalCountry!]
  sounds: [DbalSound!]
  languages: [DbalLanguage!]
}

"""count inserted rows"""
type Counter {
  total: Int!
  added: Int!
}

"""tape import result"""
type TapeResult {
  tapeId: Int!
  objectId: String!
  countries: Counter!
  sounds: Counter!
  languages: Counter!
}

"""episode data"""
type Episode {
  chapter: Int!
  season: Int!
  tvShowID: Int!
}

"""ranking"""
type Ranking {
  calculatedScore: Float!
  score: Float!
  votes: Int!
}

"""person"""
type Person {
  fullName: String!
  ID: Int!
  url: URL!
  alias: String
}

"""URL custom scalar type"""
scalar URL

"""credit, cast and crew member"""
type Credit {
  person: Person!
  role: String
  character: String
}

"""premiere"""
type Premiere {
  country: String!
  date: Date!
  detail: String
  place: String
}

"""Date custom scalar type"""
scalar Date

"""tape title"""
type Title {
  country: String
  language: String
  observations: String
  title: String!
}

"""parental guide tape certifications"""
type Certification {
  certification: String!
  country: String!
}

"""tape"""
type Tape {
  originalTitle: String!
  budget: Float
  colors: [String!]
  currency: Int
  duration: Int!
  isTvShow: Boolean!
  isTvShowChapter: Boolean!
  year: Int!
  countries: [String!]
  languages: [String!]
  genres: [String!]
  sounds: [String!]
  locations: [String!]
  credits: [Credit!]
  premieres: [Premiere!]
  titles: [Title!]
  certifications: [Certification!]
  keywords: [String!]
  ID: Int!
  url: URL!
  ranking: Ranking
  episode: Episode
}

type Query {
  getTape(imdbNumber: Int!): Tape!
  getStoredTape(tapeId: ID!): DbalTape!
}

type Mutation {
  importTape(imdbNumber: Int!): TapeResult!
}
