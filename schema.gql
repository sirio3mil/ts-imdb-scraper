# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""people alias"""
type PeopleAlias {
  alias: String!
  peopleId: Int!
  peopleAliasId: ID
}

"""stored country"""
type Country {
  countryId: ID
  isoCode: String
  officialName: String!
}

"""people detailed information"""
type PeopleDetail {
  birthDate: Date
  birthPlace: String
  country: Country
  deathDate: Date
  deathPlace: String
  gender: String
  havePhoto: Boolean
  height: Int
  peopleId: ID!
  skip: Boolean
}

"""Date custom scalar type"""
scalar Date

"""people main model"""
type People {
  aliases: [PeopleAlias!]
  detail: PeopleDetail
  fullName: String!
  objectId: String!
  peopleId: ID
}

"""people role"""
type Role {
  roleId: ID!
  role: String!
}

"""tape people role output"""
type CreditOutput {
  people: People!
  role: Role!
  tapePeopleRoleId: ID!
}

"""person"""
type ScrappedPerson {
  fullName: String!
  ID: Int!
  url: URL!
  alias: String
}

"""URL custom scalar type"""
scalar URL

"""credit, cast and crew member"""
type ScrappedCredit {
  person: ScrappedPerson!
  role: String
  character: String
}

"""stored genre"""
type Genre {
  genreId: ID
  name: String!
}

"""stored language"""
type Language {
  languageId: ID
  name: String!
}

"""stored ranking"""
type Ranking {
  realScore: Float!
  objectId: ID!
  score: Float!
  votes: Int!
}

"""stored sound"""
type Sound {
  description: String!
  soundId: ID
}

"""stored tape detail"""
type TapeDetail {
  budget: Float
  color: String
  duration: Int
  cover: Boolean
  adult: Boolean
  tvShow: Boolean
  tvShowChapter: Boolean
  year: Int
  tapeId: ID!
}

"""stored tape"""
type Tape {
  originalTitle: String!
  objectId: String!
  tapeId: ID
  detail: TapeDetail
  countries: [Country!]
  sounds: [Sound!]
  languages: [Language!]
  genres: [Genre!]
  ranking: Ranking
  tvShow: TvShow
  tvShowChapter: TvShowChapter
  people: [CreditOutput!]
}

"""stored tv show chapter"""
type TvShowChapter {
  chapter: Int!
  season: Int!
  tapeId: ID!
  tvShowTapeId: Int!
}

"""stored tv show"""
type TvShow {
  finished: Boolean!
  tapeId: ID!
}

"""count inserted rows"""
type CounterOutput {
  total: Int!
  added: Int!
}

"""ranking"""
type ScrappedRanking {
  realScore: Float!
  score: Float!
  votes: Int!
}

"""tape import result"""
type ImportOutput {
  tapeId: Int!
  objectId: String!
  countries: CounterOutput!
  sounds: CounterOutput!
  languages: CounterOutput!
  genres: CounterOutput!
  ranking: ScrappedRanking!
  finished: Boolean
  tvShowTapeId: Int
  chapter: Int
  season: Int
  directors: Int
  writers: Int
  cast: Int
}

"""episode data"""
type ScrappedEpisode {
  chapter: Int!
  season: Int!
  tvShowID: Int!
}

"""premiere"""
type ScrappedPremiere {
  country: String!
  date: Date!
  detail: String
  place: String
}

"""tape title"""
type ScrappedTitle {
  country: String
  language: String
  observations: String
  title: String!
}

"""parental guide tape certifications"""
type ScrappedCertification {
  certification: String!
  country: String!
}

"""tape"""
type ScrappedTape {
  originalTitle: String!
  budget: Float
  colors: [String!]
  currency: Int
  duration: Int!
  isTvShow: Boolean!
  isTvShowChapter: Boolean!
  year: Int!
  countries: [String!]
  languages: [String!]
  genres: [String!]
  sounds: [String!]
  locations: [String!]
  credits: [ScrappedCredit!]
  premieres: [ScrappedPremiere!]
  titles: [ScrappedTitle!]
  certifications: [ScrappedCertification!]
  keywords: [String!]
  ID: Int!
  url: URL!
  ranking: ScrappedRanking
  episode: ScrappedEpisode
}

type Query {
  getScrappedTape(imdbNumber: Int!): ScrappedTape!
  getTape(tapeId: ID!): Tape!
}

type Mutation {
  importTape(imdbNumber: Int!): ImportOutput!
}
